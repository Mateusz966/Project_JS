{"version":3,"sources":["index.js"],"names":["gallery","document","querySelector","KEY","paginationList","keyword","page","country","galleryRender","data","fetchEvents","console","log","pages","events","_embedded","links","totalPages","_links","first","href","last","forEach","elm","insertAdjacentHTML","images","url","name","dates","start","localDate","venues","pagination","response","fetch","then","json","catch","error","numPages","i","push","children","firstLink","lastElementIndex","length","paginationLinks","querySelectorAll","classList","add","textContent","number","remove","addEventListener","event","preventDefault","innerHTML","window","scrollTo","top","behavior"],"mappings":";;;AAAA,aACA,QAAA,oBACA,MAAMA,EAAUC,SAASC,cAAc,YACjCC,EAAM,mCACNC,EAAiBH,SAASC,cAAc,eAC9C,IAEIG,EAFAC,EAAO,EACPC,EAAU,KAGd,eAAeC,EAAcD,EAASD,GAChCG,IAAAA,QAAaC,EAAYH,EAASD,GACtCK,QAAQC,IAAIH,GACRI,IAAAA,EAAQJ,EAAKH,KACbQ,EAASL,EAAKM,UAAUD,OAExBE,GADaH,EAAMI,WACXR,EAAKS,QACLF,EAAMG,MAAMC,KACZJ,EAAMK,KAAKD,KACvBN,EAAOQ,QAAQC,IACbvB,EAAQwB,mBACN,+EAE8BD,EAAIE,OAAO,GAAGC,8EAEnBH,EAAII,wCACNJ,EAAIK,MAAMC,MAAMC,+CACdP,EAAIR,UAAUgB,OAAO,GAAGJ,8BAKvDK,IAIA,eAAetB,EAAYH,EAASD,GAa3B2B,aAZgBC,2EACkD3B,wBAA8BD,YAAeH,KAEnHgC,KAAK1B,IAGGwB,OADUxB,EAAK2B,SAGvBC,MAAMC,IACL3B,QAAQC,IAAI0B,KAMlB,eAAeN,IACTvB,IAAAA,QAAaC,EAAYH,EAASD,GAClCO,EAAQJ,EAAKH,KACbW,EAAaJ,EAAMI,WACnBD,EAAQP,EAAKS,OAGbqB,GAFQvB,EAAMG,MAAMC,KACZJ,EAAMK,KAAKD,KACR,IACV,IAAA,IAAIoB,EAAI,EAAGA,EAAIvB,EAAYuB,GAAK,EACnCD,EAASE,KAAKD,GAEhBD,EAASjB,QAAQC,IACfnB,EAAeoB,mBACb,oDACwCD,KAAOA,gBAGjCnB,EAAesC,SAAS,GAApCC,MACAC,EAAmBxC,EAAesC,SAASG,OAAS,EAIpDC,GAHW1C,EAAesC,SAASE,GAC5BxC,EAAesC,SAEJzC,SAAS8C,iBAAiB,sBAEhDD,EAAgB,GAAGE,UAAUC,IAAI,4BAEjCH,EAAgBF,GAAkBI,UAAUC,IAAI,mBAChDH,EAAgBxB,QAAQC,IAEhBA,EAAI2B,aAAerC,EAAMsC,SACzB5B,EAAIyB,UAAUC,IAAI,4BAClBH,EAAgB,GAAGE,UAAUI,OAAO,6BAEpC7B,EAAI2B,YAGZ3B,EAAI8B,iBAAiB,QAAUC,IAC3BA,EAAMC,iBACRvD,EAAQwD,UAAY,GACpBpD,EAAeoD,UAAY,GAC3BlD,EAAOiB,EAAI2B,YACT1C,EAAcD,EAASD,GAEtBmD,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,WACrCjD,QAAQC,IAAIW,OAMpBf,EAAcD,EAASD","file":"src.a20735bf.js","sourceRoot":"../src","sourcesContent":["'use strict';\nimport './sass/main.scss';\nconst gallery = document.querySelector('.gallery');\nconst KEY = '9hIF6NBjrDSVNrQQJmrbBXzEzwkr0S4m';\nconst paginationList = document.querySelector('.pagination');\nlet page = 0;\nlet country = \"pl\";\nlet keyword;\n\nasync function galleryRender(country, page) {\n  let data = await fetchEvents(country, page);\n  console.log(data);\n  let pages = data.page;\n  let events = data._embedded.events;\n  let totalPages = pages.totalPages;\n  let links = data._links;\n  let fLink = links.first.href;\n  let lLink = links.last.href;\n  events.forEach(elm => {\n    gallery.insertAdjacentHTML(\n      'beforeend',\n      `<div class=\"gallery__event\">\n    <img class=\"event__image\" src=${elm.images[0].url} alt =\"\"/>\n    <div class=\"event__info\">\n    <p class=\"event__tittle\">${elm.name}</p>\n    <p class=\"event__date\">${elm.dates.start.localDate}</p>\n    <p class=\"event__place\"> ${elm._embedded.venues[0].name}</p></div>\n  </div>`,\n    );\n  });\n\npagination()\n\n}\n\nasync function fetchEvents(country, page) {\n  const response = await fetch(\n      `https://app.ticketmaster.com/discovery/v2/events.json?countryCode=${country}&sort=date,asc&page=${page}&apikey=${KEY}`,\n    )\n    .then(data => {\n      // console.log(data.json())\n      const response = data.json();\n      return response;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n\n  return response;\n}\n\nasync function pagination() {\n  let data = await fetchEvents(country, page);\n  let pages = data.page;\n  let totalPages = pages.totalPages;\n  let links = data._links;\n  let fLink = links.first.href;\n  let lLink = links.last.href;\n  let numPages = [];\n  for (let i = 1; i < totalPages; i += 1) {\n    numPages.push(i);\n  }\n  numPages.forEach(elm => {\n    paginationList.insertAdjacentHTML(\n      'beforeend',\n      `<li class=\"pagination__link\"><a href=${elm}>${elm}</a></li>`,\n    );\n  });\n  const firstLink = paginationList.children[0];\n  const lastElementIndex = paginationList.children.length - 1;\n  const lastLink = paginationList.children[lastElementIndex];\n  const link = paginationList.children;\n\n  const paginationLinks = document.querySelectorAll(\".pagination__link\");\n\n    paginationLinks[0].classList.add(\"pagination__link--active\")\n   \n    paginationLinks[lastElementIndex].classList.add(\"link-visibility\")\n    paginationLinks.forEach(elm => {\n        // elm.classList.add(\"link-hidden\")\n        if (elm.textContent == pages.number) {\n            elm.classList.add(\"pagination__link--active\");\n            paginationLinks[0].classList.remove(\"pagination__link--active\")\n        }\n        if (elm.textContent > 0) {\n            \n        }\n    elm.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n      gallery.innerHTML = \"\";\n      paginationList.innerHTML = \"\";\n      page = elm.textContent;\n        galleryRender(country, page);\n        \n         window.scrollTo({ top: 0, behavior: 'smooth' })\n        console.log(elm)\n        \n    })\n    })\n}\n\ngalleryRender(country, page);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // pierwsza wersja\n// import './sass/main.scss';\n// 'use strict'\n// const gallery = document.querySelector(\".gallery\");\n// const key = \"9hIF6NBjrDSVNrQQJmrbBXzEzwkr0S4m\";\n// const paginationList=document.querySelector(\".pagination\")\n// let page = 21;\n// let country = 'pl';\n// let keyword\n\n//  async function fetchEvents() {\n//     fetch(`https://app.ticketmaster.com/discovery/v2/events?countryCode=${country}&sort=date,asc&page=${page}&apikey=${key}`)\n//         .then(data => {\n//             // console.log(data.json())\n//             const response = data.json();\n//             return response\n\n//         })\n//         .then(response => {\n//             console.log(response);\n//             let pages = response.page;\n//             let events = response._embedded.events;\n//             let totalPages = pages.totalPages;\n//             let links = response._links;\n//             let fLink = links.first.href;\n//             let lLink = links.last.href;\n//             console.log(lLink)\n//             console.log(fLink)\n//             console.log(links)\n//             console.log(totalPages)\n//             console.log(events)\n//             console.log(pages)\n//             events.forEach(elm => {\n//              gallery.insertAdjacentHTML(\"beforeend\",`<div class=\"gallery__event\">\n//   <img class=\"event__image\" src=${elm.images[0].url} alt =\"\"/>\n//   <div class=\"event__info\">\n//   <p class=\"event__tittle\">${elm.name}</p>\n//   <p class=\"event__date\">${elm.dates.start.localDate}</p>\n//   <p class=\"event__place\"> ${elm._embedded.venues[0].name}</p></div>\n// </div>`  );\n//             })\n//             let numPages = []\n//             for (let i = 1; i <= totalPages; i += 1){\n//                 numPages.push(i)\n//             }\n//             console.log(numPages)\n//             numPages.forEach(elm => {\n//                 paginationList.insertAdjacentHTML(\"beforeend\",`<li class=\"pagination__link\"><a href=\"\">${elm}</a></li>`)\n//             })\n//             const firstLink = paginationList.children[0];\n\n//             console.log(numPages.length)\n//             const lastElementIndex = paginationList.children.length - 1;\n//             const lastLink = paginationList.children[lastElementIndex];\n//             console.log(lastLink)\n//             console.log(lastElementIndex);\n//         //     lastLink.addEventListener(\"click\", (event) => {\n//         //         event.preventDefault()\n//         //         gallery.innerHTML = \"\";\n//         //         fetch(`https://app.ticketmaster.com${fLink}page=${page}&apikey=${key}`)\n//         // .then(data => {\n//         //     // console.log(data.json())\n//         //     const response = data.json();\n//         //     return response\n\n//         // })\n\n\n\n//         //     })\n//             // firstLink.childNodes[0].setAttribute(\"href\", `${fLink}`);\n//             // console.log(firstLink.childNodes[0])\n//             // console.log(firstLink)\n//             // lastLink.childNodes[0].setAttribute(\"href\",`${lLink}`)\n\n//         })\n//         .catch(error => {\n//         console.log(error)\n//     })\n// }\n\n\n\n\n\n// fetchEvents()\n// // pierwsza wersja koniec\n"]}