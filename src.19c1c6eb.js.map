{"version":3,"sources":["index.js"],"names":["gallery","document","querySelector","key","paginationList","keyword","page","country","galleryRender","data","fetchEvents","console","log","pages","events","_embedded","totalPages","links","_links","first","href","last","forEach","elm","insertAdjacentHTML","images","url","name","dates","start","localDate","venues","numPages","i","push","children","firstLink","lastElementIndex","length","response","fetch","then","json","catch","error"],"mappings":";;;AACA,aACA,QAAA,oBACA,MAAMA,EAAUC,SAASC,cAAc,YACjCC,EAAM,mCACNC,EAAiBH,SAASC,cAAc,eAC9C,IAEIG,EAFAC,EAAK,EACLC,EAAQ,KAGZ,eAAeC,EAAcD,EAAQD,GAC/BG,IAAAA,QAAaC,EAAYH,EAAQD,GACrCK,QAAQC,IAAIH,GACRI,IAAAA,EAAQJ,EAAKH,KACbQ,EAASL,EAAKM,UAAUD,OACxBE,EAAaH,EAAMG,WACnBC,EAAQR,EAAKS,OACLD,EAAME,MAAMC,KACZH,EAAMI,KAAKD,KACvBN,EAAOQ,QAAQC,IACbvB,EAAQwB,mBACN,+EAE8BD,EAAIE,OAAO,GAAGC,8EAEnBH,EAAII,wCACNJ,EAAIK,MAAMC,MAAMC,+CACdP,EAAIR,UAAUgB,OAAO,GAAGJ,8BAIjDK,IAAAA,EAAW,GACV,IAAA,IAAIC,EAAI,EAAGA,GAAKjB,EAAYiB,GAAK,EACpCD,EAASE,KAAKD,GAEhBD,EAASV,QAAQC,IACfnB,EAAeoB,mBACb,uDAC2CD,gBAG7BnB,EAAe+B,SAAS,GAApCC,MACAC,EAAmBjC,EAAe+B,SAASG,OAAS,EACvClC,EAAe+B,SAASE,GAC5BjC,EAAe+B,SAKhC,eAAezB,EAAYH,EAAQD,GAa1BiC,aAZgBC,sEAC2CjC,wBAA8BD,YAAeH,KAE5GsC,KAAKhC,IAGG8B,OADU9B,EAAKiC,SAGvBC,MAAMC,IACLjC,QAAQC,IAAIgC,KAQlBpC,EAAcD,EAAQD","file":"src.19c1c6eb.js","sourceRoot":"../src","sourcesContent":["\n'use strict';\nimport './sass/main.scss';\nconst gallery = document.querySelector('.gallery');\nconst key = '9hIF6NBjrDSVNrQQJmrbBXzEzwkr0S4m';\nconst paginationList = document.querySelector('.pagination');\nlet page=0;\nlet country=\"pl\";\nlet keyword;\n\nasync function galleryRender(country,page) {\n  let data = await fetchEvents(country,page);\n  console.log(data);\n  let pages = data.page;\n  let events = data._embedded.events;\n  let totalPages = pages.totalPages;\n  let links = data._links;\n  let fLink = links.first.href;\n  let lLink = links.last.href;\n  events.forEach(elm => {\n    gallery.insertAdjacentHTML(\n      'beforeend',\n      `<div class=\"gallery__event\">\n    <img class=\"event__image\" src=${elm.images[0].url} alt =\"\"/>\n    <div class=\"event__info\">\n    <p class=\"event__tittle\">${elm.name}</p>\n    <p class=\"event__date\">${elm.dates.start.localDate}</p>\n    <p class=\"event__place\"> ${elm._embedded.venues[0].name}</p></div>\n  </div>`,\n    );\n  });\n  let numPages = [];\n  for (let i = 1; i <= totalPages; i += 1) {\n    numPages.push(i);\n  }\n  numPages.forEach(elm => {\n    paginationList.insertAdjacentHTML(\n      'beforeend',\n      `<li class=\"pagination__link\"><a href=\"\">${elm}</a></li>`,\n    );\n  });\n  const firstLink = paginationList.children[0];\n  const lastElementIndex = paginationList.children.length - 1;\n    const lastLink = paginationList.children[lastElementIndex];\n    const link = paginationList.children;\n    \n\n}\n\nasync function fetchEvents(country,page) {\n  const response = await fetch(\n    `https://app.ticketmaster.com/discovery/v2/events?countryCode=${country}&sort=date,asc&page=${page}&apikey=${key}`,\n  )\n    .then(data => {\n      // console.log(data.json())\n      const response = data.json();\n      return response;\n    })\n    .catch(error => {\n      console.log(error);\n    });\n\n  return response;\n}\n\n\n\ngalleryRender(country,page);\n\n\n\n\n\n\n\n\n\n\n\n\n// // pierwsza wersja\n// import './sass/main.scss';\n// 'use strict'\n// const gallery = document.querySelector(\".gallery\");\n// const key = \"9hIF6NBjrDSVNrQQJmrbBXzEzwkr0S4m\";\n// const paginationList=document.querySelector(\".pagination\")\n// let page = 21;\n// let country = 'pl';\n// let keyword\n\n//  async function fetchEvents() {\n//     fetch(`https://app.ticketmaster.com/discovery/v2/events?countryCode=${country}&sort=date,asc&page=${page}&apikey=${key}`)\n//         .then(data => {\n//             // console.log(data.json())\n//             const response = data.json();\n//             return response\n            \n//         })\n//         .then(response => {\n//             console.log(response);\n//             let pages = response.page;\n//             let events = response._embedded.events;\n//             let totalPages = pages.totalPages;\n//             let links = response._links;\n//             let fLink = links.first.href;\n//             let lLink = links.last.href;\n//             console.log(lLink)\n//             console.log(fLink)\n//             console.log(links)\n//             console.log(totalPages)\n//             console.log(events)\n//             console.log(pages)\n//             events.forEach(elm => {\n//              gallery.insertAdjacentHTML(\"beforeend\",`<div class=\"gallery__event\">\n//   <img class=\"event__image\" src=${elm.images[0].url} alt =\"\"/>\n//   <div class=\"event__info\">\n//   <p class=\"event__tittle\">${elm.name}</p>\n//   <p class=\"event__date\">${elm.dates.start.localDate}</p>\n//   <p class=\"event__place\"> ${elm._embedded.venues[0].name}</p></div>\n// </div>`  );\n//             })\n//             let numPages = []\n//             for (let i = 1; i <= totalPages; i += 1){\n//                 numPages.push(i)\n//             }\n//             console.log(numPages)\n//             numPages.forEach(elm => {\n//                 paginationList.insertAdjacentHTML(\"beforeend\",`<li class=\"pagination__link\"><a href=\"\">${elm}</a></li>`)\n//             })\n//             const firstLink = paginationList.children[0];\n            \n//             console.log(numPages.length)\n//             const lastElementIndex = paginationList.children.length - 1;\n//             const lastLink = paginationList.children[lastElementIndex];\n//             console.log(lastLink)\n//             console.log(lastElementIndex);\n//         //     lastLink.addEventListener(\"click\", (event) => {\n//         //         event.preventDefault()\n//         //         gallery.innerHTML = \"\";\n//         //         fetch(`https://app.ticketmaster.com${fLink}page=${page}&apikey=${key}`)\n//         // .then(data => {\n//         //     // console.log(data.json())\n//         //     const response = data.json();\n//         //     return response\n            \n//         // })\n                \n                \n\n//         //     })\n//             // firstLink.childNodes[0].setAttribute(\"href\", `${fLink}`);\n//             // console.log(firstLink.childNodes[0])\n//             // console.log(firstLink)\n//             // lastLink.childNodes[0].setAttribute(\"href\",`${lLink}`)\n            \n//         })\n//         .catch(error => {\n//         console.log(error)\n//     })\n// }\n\n\n\n\n\n// fetchEvents()\n// // pierwsza wersja koniec\n"]}